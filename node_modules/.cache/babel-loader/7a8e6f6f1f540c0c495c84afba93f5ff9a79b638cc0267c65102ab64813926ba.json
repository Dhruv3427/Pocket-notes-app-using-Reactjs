{"ast":null,"code":"var _jsxFileName = \"E:\\\\My first pocket notes app\\\\Pocket notes app using react\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport DesktopView from \"./view/DesktopView/DesktopView\";\nimport MobileView from \"./view/MobileView/MobileView\";\nimport NotesMobilePage from \"./components/notesMobilePage/NotesMobilePage\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport { Provider } from \"./context/PocketContext\";\nimport usePocketContext from \"./hooks/usePocketContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [screenSize, setScreenSize] = useState(window.innerWidth);\n  const {\n    selected,\n    setSelected\n  } = usePocketContext();\n  useEffect(() => {\n    setSelected(localStorage.getItem(\"selected\") || \"\");\n    // eslint-disable-next-line\n  }, [selected]);\n  const checkScreenSize = () => {\n    setScreenSize(window.innerWidth);\n  };\n  window.addEventListener(\"resize\", checkScreenSize);\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: screenSize > 500 ? /*#__PURE__*/_jsxDEV(DesktopView, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Router, {\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(MobileView, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 40\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/notes\",\n            element: /*#__PURE__*/_jsxDEV(NotesMobilePage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Evk5OHP/gymOsAZQz7c5DF3Kf9M=\", false, function () {\n  return [usePocketContext];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","DesktopView","MobileView","NotesMobilePage","BrowserRouter","Router","Route","Routes","Provider","usePocketContext","jsxDEV","_jsxDEV","App","_s","screenSize","setScreenSize","window","innerWidth","selected","setSelected","localStorage","getItem","checkScreenSize","addEventListener","children","className","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["E:/My first pocket notes app/Pocket notes app using react/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport DesktopView from \"./view/DesktopView/DesktopView\";\nimport MobileView from \"./view/MobileView/MobileView\";\nimport NotesMobilePage from \"./components/notesMobilePage/NotesMobilePage\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport { Provider } from \"./context/PocketContext\";\nimport usePocketContext from \"./hooks/usePocketContext\";\n\nfunction App() {\n  const [screenSize, setScreenSize] = useState(window.innerWidth);\n  const { selected, setSelected } = usePocketContext();\n\n  useEffect(() => {\n    setSelected(localStorage.getItem(\"selected\") || \"\");\n    // eslint-disable-next-line\n  }, [selected]);\n  const checkScreenSize = () => {\n    setScreenSize(window.innerWidth);\n  };\n\n  window.addEventListener(\"resize\", checkScreenSize);\n  return (\n    <Provider>\n      <div className=\"App\">\n        {screenSize > 500 ? (\n          <DesktopView />\n        ) : (\n          <Router>\n            <Routes>\n              <Route path=\"/\" element={<MobileView />} />\n              <Route path=\"/notes\" element={<NotesMobilePage />} />\n            </Routes>\n          </Router>\n        )}\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAO,WAAW;AAClB,OAAOC,WAAW,MAAM,gCAAgC;AACxD,OAAOC,UAAU,MAAM,8BAA8B;AACrD,OAAOC,eAAe,MAAM,8CAA8C;AAC1E,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AACzE,SAASC,QAAQ,QAAQ,yBAAyB;AAClD,OAAOC,gBAAgB,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAACgB,MAAM,CAACC,UAAU,CAAC;EAC/D,MAAM;IAAEC,QAAQ;IAAEC;EAAY,CAAC,GAAGV,gBAAgB,CAAC,CAAC;EAEpDV,SAAS,CAAC,MAAM;IACdoB,WAAW,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;IACnD;EACF,CAAC,EAAE,CAACH,QAAQ,CAAC,CAAC;EACd,MAAMI,eAAe,GAAGA,CAAA,KAAM;IAC5BP,aAAa,CAACC,MAAM,CAACC,UAAU,CAAC;EAClC,CAAC;EAEDD,MAAM,CAACO,gBAAgB,CAAC,QAAQ,EAAED,eAAe,CAAC;EAClD,oBACEX,OAAA,CAACH,QAAQ;IAAAgB,QAAA,eACPb,OAAA;MAAKc,SAAS,EAAC,KAAK;MAAAD,QAAA,EACjBV,UAAU,GAAG,GAAG,gBACfH,OAAA,CAACV,WAAW;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAEflB,OAAA,CAACN,MAAM;QAAAmB,QAAA,eACLb,OAAA,CAACJ,MAAM;UAAAiB,QAAA,gBACLb,OAAA,CAACL,KAAK;YAACwB,IAAI,EAAC,GAAG;YAACC,OAAO,eAAEpB,OAAA,CAACT,UAAU;cAAAwB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC3ClB,OAAA,CAACL,KAAK;YAACwB,IAAI,EAAC,QAAQ;YAACC,OAAO,eAAEpB,OAAA,CAACR,eAAe;cAAAuB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/C;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IACT;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEf;AAAChB,EAAA,CA7BQD,GAAG;EAAA,QAEwBH,gBAAgB;AAAA;AAAAuB,EAAA,GAF3CpB,GAAG;AA+BZ,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}