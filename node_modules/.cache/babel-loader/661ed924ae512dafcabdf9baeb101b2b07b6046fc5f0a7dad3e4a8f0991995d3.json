{"ast":null,"code":"var _jsxFileName = \"E:\\\\My first pocket notes app\\\\Pocket notes app using react\\\\src\\\\components\\\\notesDesktop\\\\DesktopNotes.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./DesktopNotes.css\";\nimport enter from \"../../assets/icons/enter.png\";\nimport DesktopNotesContent from \"../notesContentDesktop/DesktopNotesContent\";\nimport usePocketContext from \"../../hooks/usePocketContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DesktopNotes() {\n  _s();\n  const [text, setText] = useState(\"\");\n  const [bgColor, setBgColor] = useState(\"#fff\");\n  const [initials, setInitials] = useState(\"\");\n  const [selectedTitle, setSelectedTitle] = useState(\"\");\n  const {\n    notes,\n    setNotes,\n    selected\n  } = usePocketContext();\n  useEffect(() => {\n    setNotes(JSON.parse(localStorage.getItem(selected)) || []);\n    const groupNames = JSON.parse(localStorage.getItem(\"groupNames\"));\n    const selectedGroup = groupNames.find(group => group.name === selected);\n    if (selectedGroup) {\n      setBgColor(selectedGroup.color);\n      setInitials(selectedGroup.name.split(\" \").map(word => word.charAt(0)).join(\"\").toUpperCase());\n      setSelectedTitle(selectedGroup.name.split(\" \").map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(\" \"));\n    }\n  }, [selected, setNotes]);\n  const handleKeyDown = e => {\n    if (e.key === \"Enter\") {\n      e.preventDefault();\n      handleSaveNotes();\n    }\n  };\n  const handleSaveNotes = () => {\n    if (!text.trim()) {\n      return;\n    }\n    const notes = JSON.parse(localStorage.getItem(selected)) || [];\n    const newNoteObj = {\n      id: Date.now(),\n      title: selected,\n      content: text.trim(),\n      date: new Date().toLocaleDateString(\"en-GB\", {\n        day: \"numeric\",\n        month: \"numeric\",\n        year: \"numeric\"\n      }),\n      time: new Date().toLocaleTimeString()\n    };\n    notes.push(newNoteObj);\n    localStorage.setItem(selected, JSON.stringify(notes));\n    setText(\"\");\n    setNotes(notes);\n  };\n  const handleChange = e => {\n    setText(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"desktop__notes\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"desktop__notes__title\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"desktop__notes__title__color\",\n        style: {\n          backgroundColor: bgColor\n        },\n        children: initials\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"desktop__notes__title__text\",\n        children: selectedTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"desktop__notes__content\",\n      children: notes && notes.length > 0 ? notes.map((note, index) => /*#__PURE__*/_jsxDEV(DesktopNotesContent, {\n        note: note\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }, this)) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"desktop__notes__input\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: text,\n        placeholder: \"Enter your notes here\",\n        onChange: handleChange,\n        onKeyDown: handleKeyDown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: enter,\n        alt: \"enter\",\n        onClick: handleSaveNotes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(DesktopNotes, \"w6AMx8mWZvcGbQ8/f/QTlCXZqIg=\", false, function () {\n  return [usePocketContext];\n});\n_c = DesktopNotes;\nexport default DesktopNotes;\nvar _c;\n$RefreshReg$(_c, \"DesktopNotes\");","map":{"version":3,"names":["React","useEffect","useState","enter","DesktopNotesContent","usePocketContext","jsxDEV","_jsxDEV","DesktopNotes","_s","text","setText","bgColor","setBgColor","initials","setInitials","selectedTitle","setSelectedTitle","notes","setNotes","selected","JSON","parse","localStorage","getItem","groupNames","selectedGroup","find","group","name","color","split","map","word","charAt","join","toUpperCase","slice","handleKeyDown","e","key","preventDefault","handleSaveNotes","trim","newNoteObj","id","Date","now","title","content","date","toLocaleDateString","day","month","year","time","toLocaleTimeString","push","setItem","stringify","handleChange","target","value","className","children","style","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","length","note","index","placeholder","onChange","onKeyDown","src","alt","onClick","_c","$RefreshReg$"],"sources":["E:/My first pocket notes app/Pocket notes app using react/src/components/notesDesktop/DesktopNotes.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./DesktopNotes.css\";\nimport enter from \"../../assets/icons/enter.png\";\nimport DesktopNotesContent from \"../notesContentDesktop/DesktopNotesContent\";\nimport usePocketContext from \"../../hooks/usePocketContext\";\n\nfunction DesktopNotes() {\n  const [text, setText] = useState(\"\");\n  const [bgColor, setBgColor] = useState(\"#fff\");\n  const [initials, setInitials] = useState(\"\");\n  const [selectedTitle, setSelectedTitle] = useState(\"\");\n  const { notes, setNotes, selected } = usePocketContext();\n\n  useEffect(() => {\n    setNotes(JSON.parse(localStorage.getItem(selected)) || []);\n    const groupNames = JSON.parse(localStorage.getItem(\"groupNames\"));\n    const selectedGroup = groupNames.find((group) => group.name === selected);\n    if (selectedGroup) {\n      setBgColor(selectedGroup.color);\n      setInitials(\n        selectedGroup.name\n          .split(\" \")\n          .map((word) => word.charAt(0))\n          .join(\"\")\n          .toUpperCase()\n      );\n      setSelectedTitle(\n        selectedGroup.name\n          .split(\" \")\n          .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n          .join(\" \")\n      );\n    }\n  }, [selected, setNotes]);\n\n  const handleKeyDown = (e) => {\n    if (e.key === \"Enter\") {\n      e.preventDefault();\n      handleSaveNotes();\n    }\n  };\n\n  const handleSaveNotes = () => {\n    if (!text.trim()) {\n      return;\n    }\n    const notes = JSON.parse(localStorage.getItem(selected)) || [];\n    const newNoteObj = {\n      id: Date.now(),\n      title: selected,\n      content: text.trim(),\n      date: new Date().toLocaleDateString(\"en-GB\", {\n        day: \"numeric\",\n        month: \"numeric\",\n        year: \"numeric\",\n      }),\n      time: new Date().toLocaleTimeString(),\n    };\n    notes.push(newNoteObj);\n    localStorage.setItem(selected, JSON.stringify(notes));\n    setText(\"\");\n    setNotes(notes);\n  };\n\n  const handleChange = (e) => {\n    setText(e.target.value);\n  };\n\n  return (\n    <div className=\"desktop__notes\">\n      <div className=\"desktop__notes__title\">\n        <div\n          className=\"desktop__notes__title__color\"\n          style={{ backgroundColor: bgColor }}\n        >\n          {initials}\n        </div>\n        <div className=\"desktop__notes__title__text\">{selectedTitle}</div>\n      </div>\n      <div className=\"desktop__notes__content\">\n        {notes && notes.length > 0\n          ? notes.map((note, index) => (\n              <DesktopNotesContent key={index} note={note} />\n            ))\n          : null}\n      </div>\n      <div className=\"desktop__notes__input\">\n        <textarea\n          value={text}\n          placeholder=\"Enter your notes here\"\n          onChange={handleChange}\n          onKeyDown={handleKeyDown}\n        ></textarea>\n        <img src={enter} alt=\"enter\" onClick={handleSaveNotes} />\n      </div>\n    </div>\n  );\n}\n\nexport default DesktopNotes;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,oBAAoB;AAC3B,OAAOC,KAAK,MAAM,8BAA8B;AAChD,OAAOC,mBAAmB,MAAM,4CAA4C;AAC5E,OAAOC,gBAAgB,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,MAAM,CAAC;EAC9C,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,aAAa,EAAEC,gBAAgB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM;IAAEgB,KAAK;IAAEC,QAAQ;IAAEC;EAAS,CAAC,GAAGf,gBAAgB,CAAC,CAAC;EAExDJ,SAAS,CAAC,MAAM;IACdkB,QAAQ,CAACE,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAACJ,QAAQ,CAAC,CAAC,IAAI,EAAE,CAAC;IAC1D,MAAMK,UAAU,GAAGJ,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,CAAC;IACjE,MAAME,aAAa,GAAGD,UAAU,CAACE,IAAI,CAAEC,KAAK,IAAKA,KAAK,CAACC,IAAI,KAAKT,QAAQ,CAAC;IACzE,IAAIM,aAAa,EAAE;MACjBb,UAAU,CAACa,aAAa,CAACI,KAAK,CAAC;MAC/Bf,WAAW,CACTW,aAAa,CAACG,IAAI,CACfE,KAAK,CAAC,GAAG,CAAC,CACVC,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC,CAC7BC,IAAI,CAAC,EAAE,CAAC,CACRC,WAAW,CAAC,CACjB,CAAC;MACDnB,gBAAgB,CACdS,aAAa,CAACG,IAAI,CACfE,KAAK,CAAC,GAAG,CAAC,CACVC,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC,CAACE,WAAW,CAAC,CAAC,GAAGH,IAAI,CAACI,KAAK,CAAC,CAAC,CAAC,CAAC,CAC3DF,IAAI,CAAC,GAAG,CACb,CAAC;IACH;EACF,CAAC,EAAE,CAACf,QAAQ,EAAED,QAAQ,CAAC,CAAC;EAExB,MAAMmB,aAAa,GAAIC,CAAC,IAAK;IAC3B,IAAIA,CAAC,CAACC,GAAG,KAAK,OAAO,EAAE;MACrBD,CAAC,CAACE,cAAc,CAAC,CAAC;MAClBC,eAAe,CAAC,CAAC;IACnB;EACF,CAAC;EAED,MAAMA,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAI,CAAChC,IAAI,CAACiC,IAAI,CAAC,CAAC,EAAE;MAChB;IACF;IACA,MAAMzB,KAAK,GAAGG,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAACJ,QAAQ,CAAC,CAAC,IAAI,EAAE;IAC9D,MAAMwB,UAAU,GAAG;MACjBC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;MACdC,KAAK,EAAE5B,QAAQ;MACf6B,OAAO,EAAEvC,IAAI,CAACiC,IAAI,CAAC,CAAC;MACpBO,IAAI,EAAE,IAAIJ,IAAI,CAAC,CAAC,CAACK,kBAAkB,CAAC,OAAO,EAAE;QAC3CC,GAAG,EAAE,SAAS;QACdC,KAAK,EAAE,SAAS;QAChBC,IAAI,EAAE;MACR,CAAC,CAAC;MACFC,IAAI,EAAE,IAAIT,IAAI,CAAC,CAAC,CAACU,kBAAkB,CAAC;IACtC,CAAC;IACDtC,KAAK,CAACuC,IAAI,CAACb,UAAU,CAAC;IACtBrB,YAAY,CAACmC,OAAO,CAACtC,QAAQ,EAAEC,IAAI,CAACsC,SAAS,CAACzC,KAAK,CAAC,CAAC;IACrDP,OAAO,CAAC,EAAE,CAAC;IACXQ,QAAQ,CAACD,KAAK,CAAC;EACjB,CAAC;EAED,MAAM0C,YAAY,GAAIrB,CAAC,IAAK;IAC1B5B,OAAO,CAAC4B,CAAC,CAACsB,MAAM,CAACC,KAAK,CAAC;EACzB,CAAC;EAED,oBACEvD,OAAA;IAAKwD,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BzD,OAAA;MAAKwD,SAAS,EAAC,uBAAuB;MAAAC,QAAA,gBACpCzD,OAAA;QACEwD,SAAS,EAAC,8BAA8B;QACxCE,KAAK,EAAE;UAAEC,eAAe,EAAEtD;QAAQ,CAAE;QAAAoD,QAAA,EAEnClD;MAAQ;QAAAqD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eACN/D,OAAA;QAAKwD,SAAS,EAAC,6BAA6B;QAAAC,QAAA,EAAEhD;MAAa;QAAAmD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/D,CAAC,eACN/D,OAAA;MAAKwD,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EACrC9C,KAAK,IAAIA,KAAK,CAACqD,MAAM,GAAG,CAAC,GACtBrD,KAAK,CAACc,GAAG,CAAC,CAACwC,IAAI,EAAEC,KAAK,kBACpBlE,OAAA,CAACH,mBAAmB;QAAaoE,IAAI,EAAEA;MAAK,GAAlBC,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAe,CAC/C,CAAC,GACF;IAAI;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACN/D,OAAA;MAAKwD,SAAS,EAAC,uBAAuB;MAAAC,QAAA,gBACpCzD,OAAA;QACEuD,KAAK,EAAEpD,IAAK;QACZgE,WAAW,EAAC,uBAAuB;QACnCC,QAAQ,EAAEf,YAAa;QACvBgB,SAAS,EAAEtC;MAAc;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChB,CAAC,eACZ/D,OAAA;QAAKsE,GAAG,EAAE1E,KAAM;QAAC2E,GAAG,EAAC,OAAO;QAACC,OAAO,EAAErC;MAAgB;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC7D,EAAA,CA3FQD,YAAY;EAAA,QAKmBH,gBAAgB;AAAA;AAAA2E,EAAA,GAL/CxE,YAAY;AA6FrB,eAAeA,YAAY;AAAC,IAAAwE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}